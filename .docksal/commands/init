#!/usr/bin/env bash

## Initialize stack and site (full reset)
##
## Usage: fin init

# Paths and environment settings
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
MAIN_THEME_PATH="${DOCROOT_PATH}/themes/custom/dckyiv"

#-------------------------- Helper functions --------------------------------

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

#-------------------------- Execution --------------------------------

# Stack initialization
echo -e "${green_bg} Step 1 ${NC}${green} Initializing stack...${NC}"
if [[ $DOCKER_RUNNING == "true" ]]; then
	fin reset -f
else
	fin up
fi
echo "Waiting 10s for MySQL to initialize...";
sleep 10

# Site initialization
echo -e "${green_bg} Step 2 ${NC}${green} Initializing site...${NC}"
# This runs inside cli using http://docs.docksal.io/en/v1.4.0/fin/custom-commands/#executing-commands-inside-cli

# Abort if anything fails
set -e

# Database import
echo-yellow "Importing..."
#
fin db import $PROJECT_ROOT/db/database.sql --db=default --db-user=user --db-password=user
echo

# Running composer
echo-yellow "Running composer install"
cd $PROJECT_ROOT
fin composer install --no-ansi --no-dev --no-interaction --optimize-autoloader --no-progress --prefer-dist --ignore-platform-reqs
echo-green "Done.\n"

# Running Drush commands
echo-yellow "Running drush deploy"
cd $DOCROOT_PATH
fin drush deploy
fin drush en stage_file_proxy -y
fin drush config-set stage_file_proxy.settings origin "https://drupalcampkyiv.org" -y
fin drush uli
echo-green "Done.\n"

# Removing package-lock.json.
echo-yellow "Removing yarn.lock..."
rm -f $MAIN_THEME_PATH/yarn.lock
echo-green "Done."
echo

# Building theme.
echo-yellow "Running gulp tasks in theme ${MAIN_THEME}"
fin exec nvm install 8.11.3
fin exec nvm alias default 8.11.3
fin gulp build

echo -en "${green_bg} DONE! ${NC} "
echo -e "Open ${yellow}http://${VIRTUAL_HOST}${NC} in your browser to verify the setup."

#-------------------------- END: Execution --------------------------------
